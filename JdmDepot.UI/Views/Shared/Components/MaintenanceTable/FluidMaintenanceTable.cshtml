@using JdmDepot.UI.Util
@model JdmDepot.UI.Views.Shared.Components.MaintenanceTable.FluidMaintenanceTable

@{
	var hasNotes = Model.FluidMaintenanceItems.Any(x => !string.IsNullOrEmpty(x.Notes));
}

<table class="table table-hover table-responsive-xxl">
	<thead>
	<tr>
		<th>@Resources.FluidsTable_Name_Text</th>
		<th>@Resources.FluidsTable_CapacityQuarts_Text</th>
		<th>@Resources.FluidsTable_CapacityLiters_Text</th>
		<th>@Resources.FluidsTable_OriginalSpec_Text</th>
		<th>@Resources.FluidsTable_Links_Text</th>
		@if (hasNotes)
		{
			<th>@Resources.FluidsTable_Notes_Text</th>
		}
	</tr>
	</thead>
	<tbody>
	@foreach (var item in Model.FluidMaintenanceItems.OrderBy(x => x.Name))
	{
		/*var sortedPartNumbers = item.
			.Select(x => (Item: x, Weight: x.IsManufacturerPartNumber ? 0 : 1))
			.OrderBy(x => x.Weight)
			.ThenBy(x => x.Item.Merge(
				manufacturerPartNumber => manufacturerPartNumber.PartNumber,
				alternatePartNumber => alternatePartNumber.PartNumber))
			.ToArray();*/

		var sortedLinks = item.Links
			.Select(x => x.Merge(
				advanceAuto => (Text: Resources.AdvanceAuto_Text, Url: advanceAuto.GetUrl()),
				amazon => (Text: Resources.Amazon_Text, Url: amazon.GetUrl()),
				rockAuto => (Text: Resources.RockAuto_Text, Url: rockAuto.GetUrl())))
			.OrderBy(x => x.Text)
			.ToArray();

		<tr>
			<td>@item.Name</td>
			<td>@item.CapacityQuarts Quarts</td>
			<td>@MathHelper.ConvertQuartsToLiters(item.CapacityQuarts).ToString("N1") L</td>
			<td>@item.Specification</td>
			<td>
				<ul class="list-unstyled">
					@foreach (var link in sortedLinks)
					{
						<li><a href="@link.Url" target="_blank">@link.Text</a></li>
					}
				</ul>
			</td>
			@if (hasNotes)
			{
				<td>@Html.Raw(Markdig.Markdown.ToHtml(item.Notes))</td>
			}
		</tr>
	}
	</tbody>
</table>
