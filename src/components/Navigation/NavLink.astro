---
export interface Props {
	relativeUrl: string;
	exact?: boolean;
}
const getUrl = (url: string) => {
	const newUrl = new URL(url, Astro.url);

	return newUrl.pathname + newUrl.hash;
};

const isActiveUrl: boolean = (() => {
	const currentUrl = Astro.url;

	if (Astro.props.exact) {
		return currentUrl.pathname === Astro.props.relativeUrl;
	}

	return currentUrl.pathname.startsWith(Astro.props.relativeUrl);
})();
---
{
	isActiveUrl && (
		<a
			class={"mr-4 hover:border-b-2 hover:border-red-600 md:mr-6 font-semibold border-b-1 border-red-600 px-1"}
			href={getUrl(Astro.props.relativeUrl)}
		>
			<slot />
		</a>
	)
}

{
	!isActiveUrl && (
		<a
			class={"mr-4 hover:border-b-2 hover:border-red-600 md:mr-6 px-1"}
			href={getUrl(Astro.props.relativeUrl)}
		>
			<slot />
		</a>
	)
}